{
  "savedAt": "2025-10-24T02:10:00.000Z",
  "value": "(function(TestSuite) {\n    'use strict';\n    const addTest = TestSuite.addTest.bind(TestSuite);\n    const loadApp = TestSuite.loadApp.bind(TestSuite);\n    const executeJS = TestSuite.executeJS.bind(TestSuite);\n    const isAppLoaded = TestSuite.isAppLoaded.bind(TestSuite);\n\n    const APP_NAME = 'api_tester';\n    const CATEGORY = 'API Tester - Connectivity';\n    let appOpened = false;\n\n    addTest(CATEGORY, 'Setup: Load API tester', async () => {\n        if (!await isAppLoaded(APP_NAME)) {\n            await loadApp(APP_NAME);\n            appOpened = true;\n            await new Promise(r => setTimeout(r, 2000));\n        }\n    });\n\n    addTest(CATEGORY, 'Test API connectivity', async () => {\n        const apis = [\n            { name: 'CoinGecko', url: 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd' },\n            { name: 'Binance', url: 'https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT' },\n            { name: 'Kraken', url: 'https://api.kraken.com/0/public/Ticker?pair=XBTUSD' }\n        ];\n\n        for (const api of apis) {\n            try {\n                console.log(`Testing ${api.name}...`);\n                const code = `\n                    const response = await fetch('${api.url}');\n                    const data = await response.json();\n                    return { ok: response.ok, status: response.status, api: '${api.name}' };\n                `;\n                \n                const result = await executeJS(code, APP_NAME, 10000);\n                \n                if (result.result && result.result.ok && result.result.status === 200) {\n                    console.log(`✅ ${api.name} responded successfully`);\n                    return; // Test passes - no need to test other APIs\n                }\n                \n                console.log(`❌ ${api.name} failed: HTTP ${result.result.status}`);\n            } catch (error) {\n                console.log(`❌ ${api.name} error: ${error.message}`);\n            }\n        }\n        \n        throw new Error('None of the crypto APIs responded successfully');\n    });\n\n    addTest(CATEGORY, 'Cleanup', async () => {\n        if (appOpened) {\n            console.log('API tester was opened for testing');\n        }\n    });\n\n})(window.TestSuite);\n"
}
